/*
 * CriteriosBusquedaPanel.java
 *
 * Created on 21-ago-2010, 20:45:54
 */

package vista.PanelesPrincipal;

import java.awt.event.FocusEvent;
import java.awt.event.ItemEvent;
import modelo.CamposNota;
import modelo.NombreCamposNota;
import java.awt.event.ActionListener;
import java.awt.event.FocusListener;
import java.awt.event.ItemListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.util.Calendar;
import java.util.GregorianCalendar;

/**
 * Clase que genera y gestiona el panel en el que se introducen los criterios de
 * búsqueda de las notas
 * @author Javier Rascón Mesa
 */
public class CriteriosBusquedaPanel extends javax.swing.JPanel {

    /* Atributos */

    /**
     * Calendario para poder obtener el día actual de la semana
     */
    Calendar c;

    /* Métodos */

    /**
     * Constructor
     */
    public CriteriosBusquedaPanel() {
        c = new GregorianCalendar();
        initComponents();
        
    }

    /**
     * Método apra obtener los criterios de búsqueda de la nota
     * @return Campos que definen las búsqueda
     */
    public CamposNota getCriteriosBusqueda(){

        CamposNota criteriosCN = new CamposNota();

        if(_destinatarioCheckBox.isSelected())
            criteriosCN.añadirCampo(NombreCamposNota.DESTINATARIO,
                    _destinatarioBusquedaCB.getSelectedItem());

        if(_prioridadCheckBox.isSelected())
            criteriosCN.añadirCampo(NombreCamposNota.PRIORIDAD,
                    _prioridadBusquedaCB.getSelectedItem());

        if(_fechaCheckBox.isSelected())
            criteriosCN.añadirCampo(NombreCamposNota.FECHA,
                    _fechaBusquedaFTF.getText());

        if(!_textoBusquedaTF.getText().equalsIgnoreCase("")){
            criteriosCN.añadirCampo(NombreCamposNota.ASUNTO, _textoBusquedaTF.getText());
            criteriosCN.añadirCampo(NombreCamposNota.CUERPO, _textoBusquedaTF.getText());
        }

        return criteriosCN;

    }

    /**
     * Método para añadir listeners que notifiquen el cambio de criterios de
     * búsqueda
     * @param al Listener que será notificado al cambiar algún criterio de
     * buśqueda
     */
    public void addCriteriosBusquedaCambiadosListener(final ActionListener al){
        _textoBusquedaTF.addKeyListener(new KeyListener() {

            public void keyTyped(KeyEvent e) {
                //al.actionPerformed(null);
            }

            public void keyPressed(KeyEvent e) {
                //al.actionPerformed(null);
            }

            public void keyReleased(KeyEvent e) {
                al.actionPerformed(null);
            }
        });

        _fechaCheckBox.addItemListener(new ItemListener() {

            public void itemStateChanged(ItemEvent e) {
                al.actionPerformed(null);
            }
        });
        //se añade al perder el foco para que se coja el texto formateado
        _fechaBusquedaFTF.addFocusListener(new FocusListener() {

            public void focusGained(FocusEvent e) {
                //throw new UnsupportedOperationException("Not supported yet.");
            }

            public void focusLost(FocusEvent e) {
                al.actionPerformed(null);
            }
        });

        _destinatarioCheckBox.addItemListener(new ItemListener() {

            public void itemStateChanged(ItemEvent e) {
                al.actionPerformed(null);
            }
        });
        _destinatarioBusquedaCB.addActionListener(al);

        _prioridadCheckBox.addItemListener(new ItemListener() {

            public void itemStateChanged(ItemEvent e) {
                al.actionPerformed(null);
            }
        });
        _prioridadBusquedaCB.addActionListener(al);

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        _destinatarioBusquedaCB = new javax.swing.JComboBox();
        _prioridadBusquedaCB = new javax.swing.JComboBox();
        _textoLabel = new javax.swing.JLabel();
        _textoBusquedaTF = new javax.swing.JTextField();
        _fechaBusquedaFTF = new javax.swing.JFormattedTextField();
        _destinatarioCheckBox = new javax.swing.JCheckBox();
        _prioridadCheckBox = new javax.swing.JCheckBox();
        _fechaCheckBox = new javax.swing.JCheckBox();

        setBorder(javax.swing.BorderFactory.createTitledBorder("Criterios de búsqueda"));
        setLayout(new java.awt.GridBagLayout());

        _destinatarioBusquedaCB.setModel(new javax.swing.DefaultComboBoxModel(modelo.Destinatario.values()));
        _destinatarioBusquedaCB.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        add(_destinatarioBusquedaCB, gridBagConstraints);

        _prioridadBusquedaCB.setModel(new javax.swing.DefaultComboBoxModel(modelo.Prioridades.values()));
        _prioridadBusquedaCB.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        add(_prioridadBusquedaCB, gridBagConstraints);

        _textoLabel.setText("Texto / Asunto"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        add(_textoLabel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        add(_textoBusquedaTF, gridBagConstraints);

        _fechaBusquedaFTF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getDateInstance(java.text.DateFormat.SHORT))));
        _fechaBusquedaFTF.setText(c.get(Calendar.DAY_OF_MONTH)+"/"+c.get(Calendar.MONTH)+"/"+c.get(Calendar.YEAR));
        _fechaBusquedaFTF.setEnabled(false);
        _fechaBusquedaFTF.setPreferredSize(new java.awt.Dimension(90, 18));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        add(_fechaBusquedaFTF, gridBagConstraints);

        _destinatarioCheckBox.setText("Destinatario");
        _destinatarioCheckBox.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                _destStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        add(_destinatarioCheckBox, gridBagConstraints);

        _prioridadCheckBox.setText("Prioridad");
        _prioridadCheckBox.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                _prioridadStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        add(_prioridadCheckBox, gridBagConstraints);

        _fechaCheckBox.setText("Fecha");
        _fechaCheckBox.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                _fechaStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        add(_fechaCheckBox, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void _destStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event__destStateChanged
        _destinatarioBusquedaCB.setEnabled(_destinatarioCheckBox.isSelected());
    }//GEN-LAST:event__destStateChanged

    private void _prioridadStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event__prioridadStateChanged
        _prioridadBusquedaCB.setEnabled(_prioridadCheckBox.isSelected());
    }//GEN-LAST:event__prioridadStateChanged

    private void _fechaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event__fechaStateChanged
        _fechaBusquedaFTF.setEnabled(_fechaCheckBox.isSelected());
    }//GEN-LAST:event__fechaStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox _destinatarioBusquedaCB;
    private javax.swing.JCheckBox _destinatarioCheckBox;
    private javax.swing.JFormattedTextField _fechaBusquedaFTF;
    private javax.swing.JCheckBox _fechaCheckBox;
    private javax.swing.JComboBox _prioridadBusquedaCB;
    private javax.swing.JCheckBox _prioridadCheckBox;
    private javax.swing.JTextField _textoBusquedaTF;
    private javax.swing.JLabel _textoLabel;
    // End of variables declaration//GEN-END:variables

}
